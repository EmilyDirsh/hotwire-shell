#summary Projects related to Hotwire

= Core inspirations =

HotwireVsBinSh talks about what Hotwire takes from Unix ```/bin/sh``` (a lot)

HotwireVsPowerShell is dedicated to the Hotwire's influence from Windows PowerShell (mostly object piping).

= Other projects =

[http://www.stanford.edu/~dramage/gci/ Gnome Command Interface] - GCI has some similarites (Python, GNOME
basis, backgrounding jobs).  However, a big push GCI seems to be implementing strongly reliable completion, with a lot of work
on grammar.  In contrast Hotwire has a simpler completion scheme (basically just like Unix shell, assuming
file names).  Hotwire's syntax is ridiculously simple:  `pipeline.split(" | ")`  Other differences are
Hotwire's interest in being crossplatform.

[http://web.archive.org/web/20050207072807/xmlterm.sourceforge.net/ XMLTerm] - Old, but highly innovative for the time.

[http://software.jessies.org/terminator/ Terminator] - A terminal with a few added features like find and unlimited scrollback by default.

[http://linux.pte.hu/~pipas/CUI/ CUI] - Looks based around having parsers for the output
of various shell commands, and doing things like colorization, linkification of file names, etc.  Related, but I think 
the approach (C, parsing shell commands instead of implementing them natively) is going to be too restrictive.
Hotwire tries to implement a lot of useful functionality inside the core (fixing it along the way, e.g. `rm`),
but still allowing callouts to `/bin/sh`.

[http://www.scsh.net/resources/commander-s.html SCSH] - Scheme and ncurses based enhanced interactive shell, very interesting ideas in there - see the PDF.

[http://anthias.sourceforge.net/ Anthias] Similar idea to Hotwire; targets KDE, written in C++.  They chose to
do a frontend/backend separation from the start using a custom protocol.  Development looks stalled.

[http://personal.atl.bellsouth.net/v/c/vcato/gsh/ gsh] *Very* similar ideas to Hotwire. Fairly old. Written in TCL/TK.  TODO: Download source and investigate this more.

[http://www.wickedshell.net/ Wicked Shell] - Shell integration for Eclipse.  Looks like they have some basic
completion and crossplatform functionality.  Might be worth investigating.

[http://www.geocities.com/ResearchTriangle/Forum/6751/ LinuXML] Looks like they picked a Big Idea (XML), rather than trying to be practical.

[http://www.cs.indiana.edu/~kinzler/vshnu/ vshnu] Attempt at tty-based shell in Perl. Quite old now but may have some ideas.

[http://www.fishshell.org/ Fish shell] - Interested in fixing some of the same problems we are (e.g. features not on by default), although they 
are limited by their choice of being just a login shell instead of combination "terminal"+shell.

[http://viewglob.sourceforge.net/ Viewglob] - Does some functional (but ugly) filemanager/terminal integration

[http://ipython.scipy.org/ IPython] - Looks like you can execute system commands, but more oriented towards
being a tool for Python programming.  Still though a pretty big project with some interesting ideas and
probably code.  Might want to look at their "distributed computing" stuff - maybe a better way to run pipelines?

[http://geophile.com/osh/ osh] - Pipes objects.  May be interesting for syntax ideas?

[http://www.emacswiki.org/cgi-bin/emacs/CategoryEshell EShell] - Highly programmable with Emacs Lisp, targets Emacs UI.  Also worth pulling ideas from.

[http://www.sun.com/service/sharedshell/userguide.jsp Sun Shared Shell] - is shared interesting for us?

[http://quasi-shell.sourceforge.net/ Quasi] - no GUI, seems to have syntax ideas

= Articles =

[http://polylithic.net/cli/ CLI] - Website devoted to the CLI.

[http://www.advogato.org/article/242.html Advogato entry] - Someone wondering why the Unix shell isn't better.
 
 